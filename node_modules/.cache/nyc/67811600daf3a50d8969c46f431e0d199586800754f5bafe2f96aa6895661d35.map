{"version":3,"sources":["testAccount.js"],"names":["chai","use","chaiHttp","should","describe","it","done","user","owner","type","request","app","post","send","end","req","res","have","status","body","be","a","property","an","eql","act","id","accountNumber","patch"],"mappings":"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","file":"testAccount.js","sourceRoot":"/home/kagabo/banka1/Banka/server/tests","sourcesContent":["import chai from \"chai\";\nimport chaiHttp from \"chai-http\";\nimport app from \"../app\";\n\nchai.use(chaiHttp);\nchai.should();\n\n\ndescribe(\"Account\", () => {\n    describe(\"POST /\", () => {\n        it(\"create an account\", (done) => {\n            const user = {\n                owner: 1,\n                type: \"saving\",\n            }\n            chai.request(app)\n                .post('/api/v1/createAccount')\n                .send(user)\n                .end((req, res) => {\n                    res.should.have.status(201);\n                    res.body.should.be.a('object');\n                    res.body.should.have.property(\"data\").should.be.an('object');\n                    done();\n                });\n        });\n        it(\"it should not create the account with out with no user\", (done) => {\n            const user = {\n                owner: \"\",\n                type: \"saving\",\n            }\n\n            chai.request(app)\n                .post('/api/v1/createAccount')\n                .send(user)\n                .end((req, res) => {\n                    res.should.have.status(400);\n                    res.body.should.have.property('error').eql('owner not found!');\n                    done();\n                }\n                );\n        });\n        it(\"it should not create the account\", (done) => {\n            const user = {\n                owner: 1,\n                type: \"\",\n            }\n\n            chai.request(app)\n                .post('/api/v1/createAccount')\n                .send(user)\n                .end((req, res) =>{\n                    res.should.have.status(400);\n                    res.body.should.have.property('error').eql('type is required!');\n                    done();\n                }\n            );\n        });\n    });\n    describe('PATCH /', ()=>{\n        it('Admin must activate the account', (done)=>{\n            const act ={\n                id: 1,\n                accountNumber: 123456,           \n            };\n\n            chai.request(app)\n                .patch(\"/api/v1/activateDeactivateAccount\")\n                .send(act)\n                .end((req,res) => {\n                    res.should.have.status(201);\n                    res.body.should.be.a('object');\n                    res.body.should.have.property('status').eql(201);\n                    done();\n                }\n            );\n        });\n        \n\n        it('should note activate while no user found',(done) =>{\n            const act = {\n                id: 5,\n                accountNumber: 123456,\n            };\n            chai.request(app)\n                .patch('/api/v1/activateDeactivateAccount')\n                .send(act)\n                .end((req,res) =>{\n                    res.should.have.status(400);\n                    res.body.should.be.a('object');\n                    res.body.should.have.property('status').eql(400);\n                    res.body.should.have.property('error').eql('user not found');\n                    done();\n                });\n        });\n        it('should note activate while user is note an admin', (done) => {\n            const act = {\n                id: 2,\n                accountNumber: 123456,\n            };\n            chai.request(app)\n                .patch('/api/v1/activateDeactivateAccount')\n                .send(act)\n                .end((req, res) => {\n                    res.should.have.status(400);\n                    res.body.should.be.a('object');\n                    res.body.should.have.property('status').eql(400);\n                    res.body.should.have.property('error').eql('user is not admin to deactivate or activate the account');\n                    done();\n                });\n        });\n        it('should note activate while account not found', (done) => {\n            const act = {\n                id: 1,\n                accountNumber: 12345,\n            };\n            chai.request(app)\n                .patch('/api/v1/activateDeactivateAccount')\n                .send(act)\n                .end((req, res) => {\n                    res.should.have.status(400);\n                    res.body.should.be.a('object');\n                    res.body.should.have.property('status').eql(400);\n                    res.body.should.have.property('error').eql('account not found');\n                    done();\n                });\n        });\n\n    });\n});"]}