{"version":3,"sources":["check-user.js"],"names":["mid","req","res","next","token","headers","authorization","split","console","log","decoded","jwt","verify","userData","error","status","json"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,MAAM,SAANA,GAAM,CAACC,GAAD,EAAKC,GAAL,EAAUC,IAAV,EAAmB;;AAE3B,QAAI;AACA,YAAMC,QAAQH,IAAII,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;AACAC,gBAAQC,GAAR,CAAYL,KAAZ;AACA,YAAMM,UAAUC,uBAAIC,MAAJ,CAAWR,KAAX,EAAkB,QAAlB,CAAhB;AACAH,YAAIY,QAAJ,GAAeH,OAAf;AACAP;AACH,KAND,CAME,OAAMW,KAAN,EAAa;AACX,eAAOZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,oBAAQ,GADgB;AAExBD,mBAAO;AAFiB,SAArB,CAAP;AAIH;AACJ,CAdD;;kBAgBed,G","file":"check-user.js","sourceRoot":"/home/kagabo/banka1/Banka/server/middleware","sourcesContent":["import jwt from \"jsonwebtoken\";\n\nconst mid = (req,res, next) => {\n    \n    try {\n        const token = req.headers.authorization.split(\" \")[1];\n        console.log(token);\n        const decoded = jwt.verify(token, 'secret');\n        req.userData = decoded;\n        next();\n    } catch(error) {\n        return res.status(401).json({\n            status: 401,\n            error: \"user failed\"\n        });\n    } \n};\n\nexport default mid;"]}